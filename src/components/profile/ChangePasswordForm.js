import React, { useState } from "react";
import { changePassword } from "../../api/profile";
import styles from "./ChangePasswordForm.module.css";
import Notification from "../basic/Notification";

const ChangePasswordForm = ({ axiosPrivate, onClose }) => {
    const [oldPassword, setOldPassword] = useState("");
    const [newPassword, setNewPassword] = useState("");
    const [confirmPassword, setConfirmPassword] = useState("");
    const [error, setError] = useState("");
    const [message, setMessage] = useState(null);
    const [showOldPassword, setShowOldPassword] = useState(false); 
    const [showNewPassword, setShowNewPassword] = useState(false); 
    const [showConfirmPassword, setShowConfirmPassword] = useState(false); 

    const handleSubmit = async (e) => {
        e.preventDefault();
        setError("");

        if (newPassword !== confirmPassword) {
            setError("–ù–æ–≤—ñ –ø–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å");
            setMessage({ type: "error", text: "–ù–æ–≤—ñ –ø–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å" });
            setTimeout(() => setMessage(null), 3000);
            return;
        }

        try {
            await changePassword(oldPassword, newPassword, confirmPassword, axiosPrivate);
            setMessage({ type: "success", text: "–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å!" });
            setTimeout(() => {
                setMessage(null);
                onClose();
            }, 3000);
        } catch (error) {
            if (error.message === "Incorrect data") {
                setError("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å.");
                setMessage({ type: "error", text: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å." });
            } else {
                setError("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑");
                setMessage({ type: "error", text: "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑" });
            }
            setTimeout(() => setMessage(null), 3000);
        }
    };

    return (
        <>
            <Notification message={message?.text} type={message?.type} />

            <h1>–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</h1>
            <form onSubmit={handleSubmit}>
                <div className={styles.formGroup}>
                    <label>–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å</label>
                    <div className={styles.passwordContainer}>
                        <input
                            type={showOldPassword ? "text" : "password"}
                            value={oldPassword}
                            onChange={(e) => setOldPassword(e.target.value)}
                            required
                        />
                        <button
                            type="button"
                            className={styles.showPasswordButton}
                            onClick={() => setShowOldPassword((prev) => !prev)}
                        >
                            {showOldPassword ? "üôà" : "üëÅÔ∏è"} 
                        </button>                        
                    </div>
                </div>
                <div className={styles.formGroup}>
                    <label>–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å</label>
                    <div className={styles.passwordContainer}>
                        <input
                            type={showNewPassword ? "text" : "password"} 
                            value={newPassword}
                            onChange={(e) => setNewPassword(e.target.value)}
                            required
                        />
                        <button
                            type="button"
                            className={styles.showPasswordButton}
                            onClick={() => setShowNewPassword((prev) => !prev)} 
                        >
                            {showNewPassword ? "üôà" : "üëÅÔ∏è"} 
                        </button>
                    </div>
                </div>
                <div className={styles.formGroup}>
                    <label>–ü—ñ–¥—Ç–≤–µ—Ä–¥—å—Ç–µ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å</label>
                    <div className={styles.passwordContainer}>
                        <input
                            type={showConfirmPassword ? "text" : "password"} 
                            value={confirmPassword}
                            onChange={(e) => setConfirmPassword(e.target.value)}
                            required
                        />
                        <button
                            type="button"
                            className={styles.showPasswordButton}
                            onClick={() => setShowConfirmPassword((prev) => !prev)}
                        >
                            {showConfirmPassword ? "üôà" : "üëÅÔ∏è"} 
                        </button>
                    </div>
                </div>
                <button type="submit" className={styles.submitButton}>
                    –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
                </button>
            </form>
        </>
    );
};

export default ChangePasswordForm;